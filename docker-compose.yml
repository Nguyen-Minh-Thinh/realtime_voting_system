services:
  airflow-container:
    image: apache/airflow:slim-2.10.3rc2-python3.10
    depends_on: 
      - zookeeper
      - kafka-1
      - kafka-2
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./.env:/opt/airflow/.env
    ports:
      - 9999:8080
    networks:
      - realtime-voting-network
    command: bash -c '(pip install -r /opt/airflow/requirements.txt && airflow db init && airflow users create --username ${AIRFLOW_USERNAME} --password ${AIRFLOW_PASSWORD} --firstname ${AIRFLOW_FIRSTNAME} --lastname ${AIRFLOW_LASTNAME} --role Admin --email ${AIRFLOW_EMAIL}); airflow webserver & airflow scheduler'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - realtime-voting-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeperData:/var/lib/zookeeper/data

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks: 
      - realtime-voting-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
    volumes:
      - kafkaData1:/var/lib/kafka/data

  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    networks: 
      - realtime-voting-network
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
    volumes:
      - kafkaData2:/var/lib/kafka/data

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    depends_on: 
      - kafka-1
      - kafka-2
    ports:
      - "9021:9021"
    networks: 
      - realtime-voting-network
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka-1:29092,kafka-2:29093"
      CONFLUENT_METRICS_TOPIC_REPLICATION: 2
      CONTROL_CENTER_REPLICATION_FACTOR: 2
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 2
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 2
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 2
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 2
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 104857600

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - USER=root
    ports:
      - "9090:8080"  # Spark Web UI
      - "7077:7077"  # Spark Master Port
    volumes:
      - ./spark.py:/opt/bitnami/spark/spark.py
      - ./.env:/opt/bitnami/spark/.env
      - ./checkpointLocation:/opt/bitnami/spark/checkpointLocation
    networks: 
      - realtime-voting-network
  spark-worker-1:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
      - USER=root
    depends_on:
      - spark-master
    ports:
      - "8081:8081"  # Spark Worker UI
    volumes:
      - ./spark.py:/opt/bitnami/spark/spark.py
      - ./.env:/opt/bitnami/spark/.env
      - ./checkpointLocation:/opt/bitnami/spark/checkpointLocation
    networks: 
      - realtime-voting-network

  spark-worker-2:  
    image: bitnami/spark:3.5.0
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
      - USER=root
    depends_on:
      - spark-master
    ports:
      - "8082:8081"  
    volumes:
      - ./spark.py:/opt/bitnami/spark/spark.py
      - ./.env:/opt/bitnami/spark/.env
      - ./checkpointLocation:/opt/bitnami/spark/checkpointLocation
    networks: 
      - realtime-voting-network
volumes:
  dags:
  kafkaData1:
  kafkaData2:
  zookeeperData: 
  checkpointLocation:
networks:
  realtime-voting-network:
    driver: bridge

  

    



